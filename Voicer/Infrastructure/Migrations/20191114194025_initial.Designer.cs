// <auto-generated />
using System;
using Infrastructure.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(VotingDbContext))]
    [Migration("20191114194025_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("DataAccessLayer.Models.Chats.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Chats.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.Property<string>("User")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Users.UserVoting", b =>
                {
                    b.Property<int>("VotingId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("VotingId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserVoting");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Votes.Vote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VotingId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VotingOptionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VotingId");

                    b.HasIndex("VotingOptionId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Votes.Voting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Voting");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Votes.VotingOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("VotingId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VotingId");

                    b.ToTable("VotingOption");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Chats.Message", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Chats.Chat", null)
                        .WithMany("Message")
                        .HasForeignKey("ChatId");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Users.UserVoting", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Users.User", "User")
                        .WithMany("UserVoting")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Models.Votes.Voting", "Voting")
                        .WithMany("Participants")
                        .HasForeignKey("VotingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Models.Votes.Vote", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Users.User", "User")
                        .WithMany("Votes")
                        .HasForeignKey("UserId");

                    b.HasOne("DataAccessLayer.Models.Votes.Voting", "Voting")
                        .WithMany("Votes")
                        .HasForeignKey("VotingId");

                    b.HasOne("DataAccessLayer.Models.Votes.VotingOption", "VotingOption")
                        .WithMany()
                        .HasForeignKey("VotingOptionId");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Votes.Voting", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Users.User", null)
                        .WithMany("CreatedVoting")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Votes.VotingOption", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Votes.Voting", null)
                        .WithMany("VotingOption")
                        .HasForeignKey("VotingId");
                });
#pragma warning restore 612, 618
        }
    }
}
